// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Database;

namespace WebApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210401080047_RepairPost")]
    partial class RepairPost
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Models.POCO.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("PersonID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            Address = "ul. Koszykowa 57A/7",
                            City = "Warszawa",
                            FirstName = "Adam",
                            LastName = "Nowak"
                        });
                });

            modelBuilder.Entity("WebApi.Models.POCO.Post", b =>
                {
                    b.Property<int>("PostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPromoted")
                        .HasColumnType("bit");

                    b.Property<string>("Localization")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ShopName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PostID");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostID = 1,
                            CategoryID = 1,
                            Content = "Oto mój pierwszy post!",
                            Date = new DateTime(2021, 4, 1, 10, 0, 47, 511, DateTimeKind.Local).AddTicks(7697),
                            IsPromoted = false,
                            Localization = "Warszawa",
                            ShopName = "Sklep1",
                            Title = "tytuł 1",
                            UserID = 1
                        },
                        new
                        {
                            PostID = 2,
                            CategoryID = 1,
                            Content = "Oto mój drugi post!",
                            Date = new DateTime(2021, 4, 1, 10, 0, 47, 514, DateTimeKind.Local).AddTicks(6888),
                            IsPromoted = false,
                            Localization = "Kraków",
                            ShopName = "Sklep2",
                            Title = "tytuł 2",
                            UserID = 2
                        },
                        new
                        {
                            PostID = 3,
                            CategoryID = 1,
                            Content = "Oto mój trzeci post!",
                            Date = new DateTime(2021, 4, 1, 10, 0, 47, 514, DateTimeKind.Local).AddTicks(6953),
                            IsPromoted = false,
                            Localization = "Poznań",
                            ShopName = "Sklep3",
                            Title = "tytuł 3",
                            UserID = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
