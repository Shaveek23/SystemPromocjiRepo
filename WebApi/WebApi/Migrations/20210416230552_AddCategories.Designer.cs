// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Database;

namespace WebApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210416230552_AddCategories")]
    partial class AddCategories
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Models.POCO.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CategoryID");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Polityka"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Stomatologia"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Kaczor Donald"
                        });
                });

            modelBuilder.Entity("WebApi.Models.POCO.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CommentID");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            CommentID = 1,
                            Content = "tralalala ",
                            DateTime = new DateTime(2021, 4, 17, 1, 5, 51, 723, DateTimeKind.Local).AddTicks(4367),
                            PostID = 1,
                            UserID = 1
                        },
                        new
                        {
                            CommentID = 2,
                            Content = "tralalala pararara",
                            DateTime = new DateTime(2021, 4, 17, 1, 5, 51, 726, DateTimeKind.Local).AddTicks(2227),
                            PostID = 2,
                            UserID = 1
                        },
                        new
                        {
                            CommentID = 3,
                            Content = "tu ti tu rum tu tu",
                            DateTime = new DateTime(2021, 4, 17, 1, 5, 51, 726, DateTimeKind.Local).AddTicks(2273),
                            PostID = 1,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("WebApi.Models.POCO.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("PersonID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            Address = "ul. Koszykowa 57A/7",
                            City = "Warszawa",
                            FirstName = "Adam",
                            LastName = "Nowak"
                        });
                });

            modelBuilder.Entity("WebApi.Models.POCO.Post", b =>
                {
                    b.Property<int>("PostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPromoted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PostID");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostID = 1,
                            CategoryID = 1,
                            Content = "Oto mój pierwszy post!",
                            Date = new DateTime(2021, 3, 11, 12, 23, 46, 0, DateTimeKind.Unspecified),
                            IsPromoted = false,
                            Title = "tytuł 1",
                            UserID = 1
                        },
                        new
                        {
                            PostID = 2,
                            CategoryID = 1,
                            Content = "Oto mój drugi post!",
                            Date = new DateTime(2021, 6, 21, 11, 2, 44, 0, DateTimeKind.Unspecified),
                            IsPromoted = false,
                            Title = "tytuł 2",
                            UserID = 2
                        },
                        new
                        {
                            PostID = 3,
                            CategoryID = 1,
                            Content = "Oto mój trzeci post!",
                            Date = new DateTime(2021, 4, 11, 1, 21, 4, 0, DateTimeKind.Unspecified),
                            IsPromoted = false,
                            Title = "tytuł 3",
                            UserID = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
